# Restricting deployments and components scrapped
alertmanager:
  enabled: false
alertmanagerFiles:
  alertmanager.yml: ""
kubeStateMetrics:
  enabled: false
nodeExporter:
  enabled: false
pushgateway:
  enabled: false
kubeApiServer:
  enabled: false
kubelet:
  enabled: false
kubeControllerManager:
  enabled: false
coreDns:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false

# Configuring Prometheus and Grafana for them to be reachable from outside
prometheus:
  serviceAccount:
    create: false
    name: prometheus-privileged
  service:
    type: NodePort
  prometheusSpec:
    serviceMonitorSelector:
      matchLabels:
        component: beeant-webapp
  additionalServiceMonitors:
  - name: "beeant-webapp-service"
    additionalLabels:
      component: beeant-webapp
    selector:
      matchLabels: 
        component: beeant-webapp
    namespaceSelector:
      matchNames:
      - default 
    endpoints:
    - port: http
      interval: 30s
      scrapeTimeout: 60s
      path: /metrics
  # additionalPodMonitors:
  # - name: "beeant-webapp-monitor"
  #   additionalLabels:
  #     component: beeant-webapp
  #   selector:
  #     matchLabels: 
  #       component: beeant-webapp
  #   namespaceSelector:
  #     matchNames:
  #     - default 
  #   podMetricsEndpoints:
  #   - port: http 
  #     interval: 30s
  #     scrapeTimeout: 60s
  #     path: /metrics

commonLabels:
  component: beeant-webapp

grafana:
  adminPassword: beeant-graf
  service: 
    type: NodePort
  securityContext:
    runAsUser: 1000
  rbac:
    useExistingRole: cluster-admin
  persistence:
    enabled: true